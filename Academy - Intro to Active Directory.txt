Active Directory (AD) is a directory service for Windows network environments.

It provides authentication and authorisation features but is argued to have vulnerabilities.
Hence this module.

Fundamentally, AD is a read-only database.
Anyone can read the AD, regardless of permissions.

It is important to configure AD correctly as it can reveal a lot of sensitive information if not
carefully configured.
It is noted that managing an AD properly is a difficult task since fixing one issue can lead to
another one.

Here, the module will cover the foundations of AD.

Structure: Distributed and hierarchical.
Purpose is to centrally manage organisation resources - users, groups, devices, file shares, group
policies, servers, workstations.

Primarily associated with Windows environment.


Active Directory Domain Service (AD DS)
This is a domain service that provides ways to store directory data.
It stores information like username and passwords. It manages the rights of who can access this data.


At the top of AD, is a forest containing one or more domains. Each domain can have their own subdomains.

We call a forest a boundary. Within it are security controls. Each forest can contain multiple domains.


Domain
This is a structure where its contained objects are accessible. The contained objects are users, computers
and groups.


Organisational Unit (OU)
Each domain can have one or more of these. An OU allows for management of objects.
These objects are like users, computers, groups...
Management here more specifically refers to setting policies for these set of groups.

Just visualise for simplicity: multiple forests. Within each forests you have domains. Within each domains
you have OUs.


Concept of trust
You could have two separate domains each in two separate forests have a trust with each other. A proverbial
connection.
This trusts enables only communication between them.

The core concept is that children of one forest, may not necessarily be able to access the children of the
other forest. However, the "root" of the first forest, since it has a trust with the "root" of the other forest,
can access the children of the other second forest.

It is also common to see trust set up between multiple domains and or multiple forests


Active Directory Terminology


Object: any resource. OU, printer, user, domain...
Attribute: Every object has its own set of attributes.
Each attribute has an associated LDAP name.
The LDAP name is used to perform LDAP queries.
LDAP query is a request made to AD to search for specific information in the AD.



AD schema
An AD schema defines what type of objects can exist in the AD and its attributes.
Examples:
users in AD belong to "user" class
computers in AD belong to "computer" class
Each object has its own information stored in its attributes.

Instantiation is a process where objects are created from a class.



Domain
This is a logical group of objects such as computers, users, OUs,
groups and much more.

Domains, among themselves, can be disconnected. In a way, they operate
independently.



Forest
This is a collection of domains.
One forest can have multiple domains.

Tree
A tree contains a few domains as well.
A forest contains multiple trees.
Importantly, the tree begins at the single root domain.


Container
A container object contains other objects.
Its position is fixed in the hierarchy 


Leaf
Leaf objects do not contain other objects
They are at the end of the hierarchy



Global Unique Identifier (GUID)
This is 128 bits. Assigned to every object.
It is stored in the ObjectGUID attribute.

It is used to identify objects internally.

Searching for objects using GUID is the best way to accurately identify the object
The value never changes for an object


Security principals
Anything that the OS can authenticate.

In AD, security principals are domain objects that can manage access to other resources within the domain.

For local user accounts and security groups to control access to resources on one computer, it is managed by the
Security Accounts Manager (SAM).



Security Identifier (SID)
Every account, group or process has its own unique SID. This is issued by the domain
controller and stored in a secure database.

They remain constant for the lifetime of a security principal.

When a user logs in, the system creates an access token that contains the SID.
This contains the rights of the user, and also contains SID of any groups the user is a member of.

With this access token, it is used to authorise the actions of the user on the computer.



Distinguished Name (DN)
Complete path to an object in AD.
Example:
(such as cn=bjones, ou=IT, ou=Employees, dc=inlanefreight, dc=local).
In this example, the user bjones works in the IT department of the company Inlanefreight, and his 
account is created in an Organizational Unit (OU) that holds accounts for company employees.

CN stands for Common Name, which serves as a way to search up the user object.



Relative Distinguished Name (RDN)
Contains the name of the object, relative to the parent container.
More specifically, of the same level in the naming hierarchy, the RDN is unique and differentiates
an object from other objects.



sAMAccountName
This is the user's log on name. Must be unique, with 20 or fewer characters.



Domain Controller (DC)
This is a server that centrally manages security and authentication
Windows has multiple DC. This spreads out the requests made.
Having multiple DCs also prevents a single point of failure.



Global Catalog (GC)
This is a domain controller.
The purpose of GC is to store all copies of all objects in an AD forest.
It allows users and applications to find information about any object in any domain in the forest.
Mainly enables authentication and object search.


Read-Only Domain Controller (RODC)
Purpose is to provide authentication and directory services in remote locations. (online)
This is a type of domain controller.
It holds a read-only copy of the AD database.

RODC does not cache user accounts passwords except for the RODC's computer account and RODC KRBTGT.

Note that for the above domain controllers (DC), they are bundled with installation of the OS.
These concepts regarding settings up a DC are more applicable to commercial flavours of OS rather than
home flavours.


Replication
This is a process.
Occurs when changes are made to directory objects on one domain controller (DC).
Changes made are propagated and synchronized with other domain controllers within the same forest. 


Service Principal Name (SPN)
Associates a service name with logon account.
Purpose is to uniquely identifies a service instance.


Group Policy Object (GPO)
Virtual collection of policy settings.
Enforces on groups of users and or computers within an AD.
Each GPO contains settings which applies to users and or computers.


Access Control List (ACL)
Contains an ordered entries of Access Control Entries (ACEs)
Purpose is just to contain ACEs for each object.

Access Control Entry (ACE)
Contains a trustee (user account, group account or logon session) and writes out the access rights that they have
(for a particular object)


System Access Control Lists (SACL)
Enables administrators to log access attempts to secured objects.
Linked to ACEs. ACEs determine who will get logged for that object that they attempted to access.


Fully Qualified Domain Name (FQDN)
This is the complete name for a specific host.
Format: [host name].[domain name].[tld]

This FQDN is what we see in DNS cache in the DNS recursive resolver.


Tombstone
This is just a container in AD that stores deleted AD objects.
Each deleted object has a duration as to which it will stay in the tombstone. This duration is
called the tombstone lifetime. It has a isDeleted attribute. Set to TRUE.

Once passed, it is completely removed.

Objects which are tombstone objects have most of their attributes removed.


AD Recycle Bin
Similar to tombstone, but object preserves all its attributes.
So it is easier to recover.
Can also configure how long it stays in the Recycle Bin.


System Volume (SYSVOL)
The purpose is to store and replicate essential system files and data that are necessary for functioning
of the domain.
It stores GPOs, log on and off scripts
It synchronises policies among different DCs



AdminSDHolder, Security Descriptor Propagator (SDProp) and PDC Emulator:
PDC Emulator ensures synchronity for group policies in the domain. It runs in cycles.
The point of it is in the case of an attacker that tries to tweak the group policies.
This PDC Emulator will be a reference point for timing.
The PDC emulator also handles authentication, and password changes. 

SD prop references the "true" time from PDC emulator when it should "scan" the domain
to ensure all security policies are enforced.

The AdminSDHolder manages the ACLs for high-security members.
It ensures that security settings for protected objects like as privileged groups 
are consistent and secure.


dsHeuristics
Controls settings within a forest.
It means directory service Heuristics.

This is a string value. Stored on the 'Directory Service' object within the AD forest.

In this string value, it encapsulates multiple flags and or individual values that corresponds
to specific configuration settings or feature toggle.

These are often binary flags. In the string itself.


adminCount
It is a flag that marks an object; to be protected by SDProp process.

It is an attribute of individual objects within the AD. 

If the object has this attribute set to 1, the object gets protected by the process.

Attackers like to use this attribute or flag to flag out important objects in AD (like user accounts)
Because in the case of accounts; it would suggest that the account is of higher importance and privilege.



Active Directory Users and Computers (ADUC)
Just a GUI console for managing users, groups, computers and contacts in an AD.


ADSI Edit
A GUI tool to manage objects in AD. Has great privileges, more so than ADUC and should be protected carefully.


sIDHistory
Attribute of objects.
It stores the previous SID of the object.

The purpose is for migration from one domain to another (migrate user rights)



NT Directory Service, Directory Information Tree (NTDS.DIT)

Database that stores AD information about user and group objects, membership and password hashes.
As a result, this is the of very very very large importance to attackers.
Attackers can actually crack the hashes in this file; hence precaution should be taken before that can happen.



MSBROWSE

This was used last time. A Microsoft networking protocol. And used in LANs to enable browsing of services.

Nowadays, people stop using this. It is replaced by Server Message Block (SMB) protocol for file and printer sharing,
and Common Internet File System (CIFS) protocol for the browsing of services.



Objects

Users are known as leaf objects; as they cannot contain any other objects.
A user object has both a SID and GUID. It in fact has many attributes.

Contact objects are also leaf objects that store contact information (nothing sensitive).
No SID, only GUID.

Printers are leaf objects, no SID, only GUID.
Computers are leaf objects, has SID and GUID.




Shared Folders

These are folders objects that are pointers to a shared folder on a specific computer.
Very flexible as to who can access it.

They only have GUID, no SID


Groups

A group is a container object that contains other objects like users, computers, or even other groups.
Has both an SID and GUID.
The purpose of groups is just for easier management of (multiple) objects' access controls
Useful for auditing group memberships.
Just think of this as easier management of permissions for users and their access.


Organisation Units (OUs)

Also for ease of management. It is a container that stores similar objects. 
It has a clear hierarchical structure for organising objects
OUs are useful for managing Group Policy settings across a subset of users or groups.


Domain

A domain is a structure of an AD network
it contains objects like users and computers.
Has two categories: two container objects: groups and OUs.

Each domain has its own database and set of policies.


Domain controllers

As an extension to the above's explanation on domain, Domain Controllers handle authentication
requests, verify users on the network and controls access rights to resources within the domain.


Sites

A site in AD is a set of computers across one or more subnets connected via links.
Their purpose is to optimise network flow.
This is done by replicating the directory data between domain controllers within the same site.
Replication of directory data is necessary, as explained in the above, because we want more than one
point of failure. Sites help optimise this process of replicating the directory data since they are closer
in proximity.


Built-in
This is a container. It holds default groups in an AD domain. Predefined when AD domain is created.



Foreign Security Principals (FSP)

These are objects in AD that represents a security principal that is part of an EXTERNAL forest.
They are created upon adding a external security principal into the current domain.

It holds the SID of the foreign object (external security principal).
Windows uses this SID to resolve the object's name


Active Directory Functionality
There are many functionalities within the Active Directory (AD).

There are few Flexible Single Master operation (FMSO) roles.

Each role is responsible for a task in the AD forest.
Each role is conducted by a software service running on server machines within the network.

There are five roles:

1. Schema Master
This handles the read / write copy of the AD schema. It defines all attributes that can apply to an
AD object.
For example, adding a new attribute for user accounts. This will update the schema, and is done by the
schema master.

2. Domain Naming Master
Manages domain names.
Ensures that two domains in the same forest do not share the same name.

3. Relative ID (RID) Master
The RID is used to create SID for objects.
To make the SID unique, they combine RID with SID.
When a new user account is created, an RID is requested for the user.

4. Primary Domain Controller (PDC) Emulator
Concept of this is to handle authentication.
Handles password changes and time.

5. Infrastructure Master
Updates and maintains references to objects from other domains in the same forest.
Ensures the integrity of cross-domain object references.
Used for communication between domains in the same forest.


Trusts
A trust is used to establish forest to forest, or domain to domain authentication.
The use of this is so that users can access resources in another domain

Transitive property of trust. If this is true, the trust is extended to children.
Bi-directionality of trust. You can set the trust to be mono-directional or bi-directional.
Bi-directional enables users from two domains to access each others' resources.
Mono-directional does not. Only allows one-way.


Kerberos
This is an authentication protocol for domain accounts.
It is not tied to Windows, and is used in network authentication protocol.
Used in enterprise networks.
The protocol is the same for AD and for networks alike - stateless protocol.
So no session state information is maintained between the client and server.
It uses a KDC to distribute tickets to users.
Users then encrypt this ticket with their password.
KDC attempts to decrypt using the user's password.
If passes -> issue Ticket Granting Ticket to the user -> user passes this to DC -> 
issues Ticket Granting Service ticket to user -> This is tied to the service and allows
authentication to the service.

Kerberos uses port 88 TCP and UDP. Enumeration of this port informs of the location of the
Domain Controllers.


LDAP
Primary protocol that is used to access and manage objects in the Active Directory.
Focused on directory data; in contrast to Kerberos (on user authentication).
They do work together; to retrieve user authentication information stored in directory.

LDAP enables applications to talk to the AD.
A good analogy in the notes:
The relationship between AD and LDAP can be compared to Apache and HTTP.
The same way Apache is a web server that uses the HTTP protocol, Active Directory is a
directory server that uses the LDAP protocol.

LDAP messages are sent in plaintext; so it is recommended to use TLS encryption in transit.


MSRPC
Microsoft's implementation of Remote Procedure Call.
This is a protocol that enables Windows-Windows communication.
More precisely, it enables the applications and or services on both machines to communicate.


Explanation of more authentication methods:
Why there are so many different authentication protocols?:
Timeline - support for legacy systems.


NTLM Authentication
Note that typically Kerberos is preferred. This is a fallback.
Challenge-response protocol: 
1. User sends NEGOTIATE_MESSAGE
2. CHALLENGE_MESSAGE sent to user (nonce): client must compute a valid response
3. User sends AUTHENTICATE_MESSAGE
4. Validate. If validated, grant access.


User Accounts

When a user logs in, he gets an access token. This token encodes information like the 
user's security identity like their username and their group memberships.
You can see this: Powershell whoami /all returns all relevant information.

Example of SID:

S-1-5-21-3623811015-3361044348-30300820-1013
Revision Number: 1; Typically 1 is for Windows SIDs
Identifier Authority: 5-21-3623811015; Identifies authority responsible for issuing the SID. Unique.
Subauthority Count: 4; Number of subauthorities
Subauthorities: 3361044348, 30300820, 1013
Each subauthority represents a specific domain, user, group or security principal

Users can be assigned to groups; the system administrator decides this.


Local Accounts
These are stored locally on a particular server or computer itself.
The idea of permissions and rights holds, just that it only applies to the computer

There are default local accounts:
1. Administrator. First account created with a new Windows installation. Cannot be deleted or locked.
Can be renamed or disabled though.

2. Guest. Disabled by default. Purpose is for temporary access to computer

3. SYSTEM. NT AUTHORITY\SYSTEM. This is automatic; we cannot have access over it.
It has the highest permissions but runs alone.

4. Network Service. Used by the Service Control Manager to run Windows services.
Services that run under this account will use its credentials to authenticate itself with other services.

5. Local Service. Also used by the Service Control Manager to run Windows services.
It has minimal privileges and presents anonymous credentials to the network.


Active Directory Groups vs OUs
Groups is more focused on grouping users and or accounts
OUs are more generally and can be used to group objects; which includes groups themselves.


Groups: Type and Scope
Type determines the purpose of the group;
Scope determines where you can use the group in the domain and or the forest.


Type:
Security vs Distribution groups
Security groups are for ease of assigning permissions; distribution groups are for distribution of information.
Distribution groups cannot be used for assignment of permissions.

Scope:
Domain Local: can only manage permissions to domain resources in the domain.
Global: can be used to grant access to resources in another domain.
Universal: can be used to manage resources across multiple domains and given permissions to any objects in the
same forest.


Nested group membership
Consider that a Domain Local Group can be a member of another Domain Local Group in the same domain.
Users can thus get permissions from the external domain local group, which can be unintentional.